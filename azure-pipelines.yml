trigger: none

variables:
  # Terraform inputs
  location:       centralus
  resource_group: tfstate-rg
  vnet_name:      vmss-test-vnet
  subnet_name:    vmss-test-subnet
  vmss_name:      vmss-test-vmss
  vm_size:        Standard_B2ms
  image_sku:      22_04-lts
  identity_type:  SystemAssigned

  # your DevOps MI service connection
  service_connection: DevOpsMI-ServiceConnection

stages:

# ──────────────────────────────────────────────────────────────────────────────
- stage: TerraformPlan
  displayName: "📝 Terraform Plan"
  jobs:

  # 1) Plan job (runs on ubuntu)
  - job: Terraform_Plan
    displayName: "Run terraform init & plan"
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: AzureCLI@2
        displayName: "Login (User-assigned MI)"
        inputs:
          azureSubscription: $(service_connection)
          scriptType: bash
          addSpnToEnvironment: true
          useGlobalConfig: true
          scriptLocation: inlineScript
          inlineScript: |
            export ARM_USE_MSI=true
            export ARM_CLIENT_ID=$servicePrincipalId
            export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
            export ARM_TENANT_ID=$(az account show --query tenantId -o tsv)
            echo "MSI active: sub=$ARM_SUBSCRIPTION_ID client=$ARM_CLIENT_ID"

      - script: |
          terraform init \
            -backend-config="resource_group_name=$(resource_group)" \
            -backend-config="storage_account_name=tfstatestorageacct2" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=vmss.tfstate"
        displayName: "terraform init"

      - script: |
          terraform plan \
            -var="location=$(location)" \
            -var="resource_group=$(resource_group)" \
            -var="vnet_name=$(vnet_name)" \
            -var="subnet_name=$(subnet_name)" \
            -var="vmss_name=$(vmss_name)" \
            -var="vm_size=$(vm_size)" \
            -var="image_sku=$(image_sku)" \
            -var="identity_type=$(identity_type)"
        displayName: "terraform plan"

  # 2) Manual approval job (agentless—pool: server)
  - job: Confirm_Terraform_Plan
    displayName: "✔️ Confirm Terraform Plan"
    pool: server
    timeoutInMinutes: 1440
    steps:
      - task: ManualValidation@0
        timeoutInMinutes: 1440
        inputs:
          notifyUsers: ''               # required—even if blank :contentReference[oaicite:0]{index=0}
          instructions: |
            Please review the Terraform plan  
            in the “Run terraform init & plan” job above,  
            then click Approve to continue.
          onTimeout: reject

# ──────────────────────────────────────────────────────────────────────────────
- stage: TerraformApply
  displayName: "🚀 Terraform Apply"
  dependsOn: TerraformPlan
  jobs:
  - job: Terraform_Apply
    displayName: "Run terraform apply"
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: AzureCLI@2
        displayName: "Login (User-assigned MI)"
        inputs:
          azureSubscription: $(service_connection)
          scriptType: bash
          addSpnToEnvironment: true
          useGlobalConfig: true
          scriptLocation: inlineScript
          inlineScript: |
            export ARM_USE_MSI=true
            export ARM_CLIENT_ID=$servicePrincipalId
            export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
            export ARM_TENANT_ID=$(az account show --query tenantId -o tsv)

      - script: |
          terraform apply -auto-approve \
            -var="location=$(location)" \
            -var="resource_group=$(resource_group)" \
            -var="vnet_name=$(vnet_name)" \
            -var="subnet_name=$(subnet_name)" \
            -var="vmss_name=$(vmss_name)" \
            -var="vm_size=$(vm_size)" \
            -var="image_sku=$(image_sku)" \
            -var="identity_type=$(identity_type)"
        displayName: "terraform apply"
 
 
