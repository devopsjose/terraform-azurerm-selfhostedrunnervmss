trigger: none

variables:
  location:       centralus
  resource_group: tfstate-rg
  vnet_name:      vmss-test-vnet
  subnet_name:    vmss-test-subnet
  vmss_name:      vmss-test-vmss
  vm_size:        Standard_B2ms
  image_sku:      22_04-lts
  identity_type:  SystemAssigned
  service_connection: DevOpsMI-ServiceConnection

stages:

- stage: TerraformPlan
  jobs:
  - job: Terraform_Plan
    pool: { vmImage: ubuntu-latest }
    steps:
    - task: AzureCLI@2
      displayName: "Login (User-assigned MI)"
      inputs:
        azureSubscription: $(service_connection)
        scriptType: bash
        addSpnToEnvironment: true
        useGlobalConfig: true
        scriptLocation: inlineScript
        inlineScript: |
          export ARM_USE_MSI=true
          export ARM_CLIENT_ID=$servicePrincipalId
          export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
          export ARM_TENANT_ID=$(az account show --query tenantId -o tsv)

    # ‚Üê Install Terraform before calling any terraform commands
    - script: |
        TERRAFORM_VER=1.5.6
        wget https://releases.hashicorp.com/terraform/${TERRAFORM_VER}/terraform_${TERRAFORM_VER}_linux_amd64.zip
        unzip terraform_${TERRAFORM_VER}_linux_amd64.zip
        sudo mv terraform /usr/local/bin
        terraform version
      displayName: 'Install Terraform CLI'

    - script: |
        terraform init \
          -backend-config="resource_group_name=$(resource_group)" \
          -backend-config="storage_account_name=tfstatestorageacct2" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=vmss.tfstate"
      displayName: "terraform init"

    - script: |
        terraform plan \
          -var="location=$(location)" \
          -var="resource_group=$(resource_group)" \
          -var="vnet_name=$(vnet_name)" \
          -var="subnet_name=$(subnet_name)" \
          -var="vmss_name=$(vmss_name)" \
          -var="vm_size=$(vm_size)" \
          -var="image_sku=$(image_sku)" \
          -var="identity_type=$(identity_type)"
      displayName: "terraform plan"

  - job: Confirm_Terraform_Plan
    pool: server
    steps:
      - task: ManualValidation@0
        timeoutInMinutes: 1440
        inputs:
          notifyUsers: ''
          instructions: |
            Review the Terraform plan above, then Approve.
          onTimeout: reject

- stage: TerraformApply
  dependsOn: TerraformPlan
  jobs:
  - job: Terraform_Apply
    pool: { vmImage: ubuntu-latest }
    steps:
    - task: AzureCLI@2
      displayName: "Login (User-assigned MI)"
      inputs:
        azureSubscription: $(service_connection)
        scriptType: bash
        addSpnToEnvironment: true
        useGlobalConfig: true
        scriptLocation: inlineScript
        inlineScript: |
          export ARM_USE_MSI=true
          export ARM_CLIENT_ID=$servicePrincipalId
          export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
          export ARM_TENANT_ID=$(az account show --query tenantId -o tsv)

    # install again (fresh agent) if needed
    - script: |
        TERRAFORM_VER=1.5.6
        wget https://releases.hashicorp.com/terraform/${TERRAFORM_VER}/terraform_${TERRAFORM_VER}_linux_amd64.zip
        unzip terraform_${TERRAFORM_VER}_linux_amd64.zip
        sudo mv terraform /usr/local/bin
      displayName: 'Install Terraform CLI'

    - script: |
        terraform apply -auto-approve \
          -var="location=$(location)" \
          -var="resource_group=$(resource_group)" \
          -var="vnet_name=$(vnet_name)" \
          -var="subnet_name=$(subnet_name)" \
          -var="vmss_name=$(vmss_name)" \
          -var="vm_size=$(vm_size)" \
          -var="image_sku=$(image_sku)" \
          -var="identity_type=$(identity_type)"
      displayName: "terraform apply"
 