# azure-pipelines.yml
trigger: none

variables:
  # Terraform variables
  location:       centralus
  resource_group: tfstate-rg
  vnet_name:      vmss-test-vnet
  subnet_name:    vmss-test-subnet
  vmss_name:      vmss-test-vmss
  vm_size:        Standard_B2ms
  image_sku:      22_04-lts
  identity_type:  SystemAssigned

  # your DevOps service connection
  service_connection: DevOpsMI-ServiceConnection

stages:

# ──────────────────────────────────────────────────────────────────────────────
- stage: TerraformPlan
  displayName: "📝 Terraform Plan"
  jobs:
  - job: Plan
    pool: { vmImage: ubuntu-latest }
    steps:

    # 1) Login using your user-assigned Managed Identity
    - task: AzureCLI@2
      displayName: "Login (User-assigned Managed Identity)"
      inputs:
        azureSubscription: $(service_connection)
        scriptType: bash
        addSpnToEnvironment: true        # populates $servicePrincipalId
        useGlobalConfig: true
        scriptLocation: inlineScript
        inlineScript: |
          # tell Terraform to use MSI
          export ARM_USE_MSI=true                             # ← backend & provider
          export ARM_CLIENT_ID=$servicePrincipalId            # ← user-assigned identity’s client-ID
          export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
          export ARM_TENANT_ID=$(az account show --query tenantId -o tsv)
          echo "MSI active: sub=$ARM_SUBSCRIPTION_ID client=$ARM_CLIENT_ID"

    # 2) terraform init (backend.tf: use_msi = true)
    - script: |
        terraform init \
          -backend-config="resource_group_name=$(resource_group)" \
          -backend-config="storage_account_name=tfstatestorageacct2" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=vmss.tfstate"
      displayName: terraform init

    # 3) terraform plan
    - script: |
        terraform plan \
          -var="location=$(location)" \
          -var="resource_group=$(resource_group)" \
          -var="vnet_name=$(vnet_name)" \
          -var="subnet_name=$(subnet_name)" \
          -var="vmss_name=$(vmss_name)" \
          -var="vm_size=$(vm_size)" \
          -var="image_sku=$(image_sku)" \
          -var="identity_type=$(identity_type)"
      displayName: terraform plan

    # 4) manual approval
    - task: ManualValidation@0
      displayName: "✔️ Approve plan"
      inputs:
        instructions: "Review the plan above, then Approve to continue"
        onTimeout: reject
        timeoutInMinutes: 1440

# ──────────────────────────────────────────────────────────────────────────────
- stage: TerraformApply
  displayName: "🚀 Terraform Apply"
  dependsOn: TerraformPlan
  jobs:
  - job: Apply
    pool: { vmImage: ubuntu-latest }
    steps:
    # login again to refresh MSI token
    - task: AzureCLI@2
      displayName: "Login (User-assigned Managed Identity)"
      inputs:
        azureSubscription: $(service_connection)
        scriptType: bash
        addSpnToEnvironment: true
        useGlobalConfig: true
        scriptLocation: inlineScript
        inlineScript: |
          export ARM_USE_MSI=true
          export ARM_CLIENT_ID=$servicePrincipalId
          export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
          export ARM_TENANT_ID=$(az account show --query tenantId -o tsv)

    # apply
    - script: |
        terraform apply -auto-approve \
          -var="location=$(location)" \
          -var="resource_group=$(resource_group)" \
          -var="vnet_name=$(vnet_name)" \
          -var="subnet_name=$(subnet_name)" \
          -var="vmss_name=$(vmss_name)" \
          -var="vm_size=$(vm_size)" \
          -var="image_sku=$(image_sku)" \
          -var="identity_type=$(identity_type)"
      displayName: terraform apply
 
 
