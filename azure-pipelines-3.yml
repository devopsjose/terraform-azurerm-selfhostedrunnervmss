trigger: none

pool:
  vmImage: 'windows-latest'  # Microsoft-hosted agent

stages:
- stage: TerraformPlan
  jobs:
  - job: Plan
    steps:

    - task: AzureCLI@2
      displayName: 'Install Terraform and Run Plan'
      inputs:
        azureSubscription: 'WifSC'
        scriptType: 'ps'
        scriptLocation: 'inlineScript'
        inlineScript: |
          $ErrorActionPreference = "Stop"

          # Get latest Terraform version
          $response = Invoke-WebRequest -Uri https://releases.hashicorp.com/terraform/ -UseBasicParsing
          if ($response.Content -match 'terraform/(\d+\.\d+\.\d+)/') {
            $version = $matches[1]
          } else {
            throw "Could not determine latest Terraform version"
          }

          Write-Output "Installing Terraform $version"
          $tfUrl = "https://releases.hashicorp.com/terraform/$version/terraform_${version}_windows_amd64.zip"
          Invoke-WebRequest -Uri $tfUrl -OutFile terraform.zip
          Expand-Archive terraform.zip -DestinationPath "$env:USERPROFILE\terraform" -Force
          $env:PATH = "$env:USERPROFILE\terraform;$env:PATH"

          terraform -version

          # Get Azure environment variables
          Write-Output "ðŸ”µ Setting ARM environment variables"
          $subId = az account show --query id -o tsv
          $tenantId = az account show --query tenantId -o tsv
          $env:ARM_SUBSCRIPTION_ID = $subId
          $env:ARM_TENANT_ID = $tenantId

          Write-Output "ðŸ”µ Running terraform init"
          terraform init -reconfigure

          Write-Output "ðŸ”µ Running terraform plan"
          terraform plan
 