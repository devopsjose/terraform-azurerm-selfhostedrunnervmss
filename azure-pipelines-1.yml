trigger: none

variables:
  # Terraform inputs
  location:       centralus
  resource_group: tfstate-rg
  vnet_name:      vmss-test-vnet
  subnet_name:    vmss-test-subnet
  vmss_name:      vmss-test-vmss
  vm_size:        Standard_B2ms
  image_sku:      22_04-lts
  identity_type:  SystemAssigned

  # your DevOps MI service connection
  service_connection: DevOpsMI-ServiceConnection

stages:

# ──────────────────────────────────────────────────────────────────────────────
- stage: TerraformPlan
  displayName: "📝 Terraform Plan"
  jobs:

  - job: Terraform_Plan
    displayName: "Run terraform init & plan"
    pool:
      vmImage: ubuntu-latest
    steps:

      # 1) Login via User-Assigned MI → populates $servicePrincipalId
      - task: AzureCLI@2
        displayName: "Login (User-assigned MI)"
        inputs:
          azureSubscription: $(service_connection)
          scriptType: bash
          addSpnToEnvironment: true
          useGlobalConfig: true
          scriptLocation: inlineScript
          inlineScript: |
            # tell Terraform backend to use the Azure CLI token
            export ARM_USE_CLI=true
            export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
            export ARM_TENANT_ID=$(az account show --query tenantId -o tsv)
            echo "Using Azure CLI auth – sub=$ARM_SUBSCRIPTION_ID"

      # 2) Install Terraform CLI
      - script: |
          TERRAFORM_VER=1.5.6
          wget https://releases.hashicorp.com/terraform/${TERRAFORM_VER}/terraform_${TERRAFORM_VER}_linux_amd64.zip
          unzip terraform_${TERRAFORM_VER}_linux_amd64.zip
          sudo mv terraform /usr/local/bin
          terraform version
        displayName: "Install Terraform CLI"

      # 3) terraform init (backend.tf should have use_azuread_auth = true, no use_msi)
      - script: |
          terraform init \
            -backend-config="resource_group_name=$(resource_group)" \
            -backend-config="storage_account_name=tfstatestorageacct2" \
            -backend-config="container_name=tfstate" \
            -backend-config="key=vmss.tfstate" \
            -backend-config="use_cli=true"      # tell backend to use CLI auth :contentReference[oaicite:1]{index=1}
        displayName: "terraform init"

      # 4) terraform plan
      - script: |
          terraform plan \
            -var="location=$(location)" \
            -var="resource_group=$(resource_group)" \
            -var="vnet_name=$(vnet_name)" \
            -var="subnet_name=$(subnet_name)" \
            -var="vmss_name=$(vmss_name)" \
            -var="vm_size=$(vm_size)" \
            -var="image_sku=$(image_sku)" \
            -var="identity_type=$(identity_type)"
        displayName: "terraform plan"

  # Manual approval (agentless)
  - job: Confirm_Terraform_Plan
    displayName: "✔️ Confirm Terraform Plan"
    pool: server
    timeoutInMinutes: 1440
    steps:
      - task: ManualValidation@0
        timeoutInMinutes: 1440
        inputs:
          notifyUsers: ''  
          instructions: |
            Please review the Terraform plan  
            in the “Run terraform init & plan” job,  
            then click Approve to continue.
          onTimeout: reject

# ──────────────────────────────────────────────────────────────────────────────
- stage: TerraformApply
  displayName: "🚀 Terraform Apply"
  dependsOn: TerraformPlan
  jobs:

  - job: Terraform_Apply
    displayName: "Run terraform apply"
    pool:
      vmImage: ubuntu-latest
    steps:

      # login again to refresh CLI token
      - task: AzureCLI@2
        displayName: "Login (User-assigned MI)"
        inputs:
          azureSubscription: $(service_connection)
          scriptType: bash
          addSpnToEnvironment: true
          useGlobalConfig: true
          scriptLocation: inlineScript
          inlineScript: |
            export ARM_USE_CLI=true
            export ARM_SUBSCRIPTION_ID=$(az account show --query id -o tsv)
            export ARM_TENANT_ID=$(az account show --query tenantId -o tsv)

      # install Terraform again on fresh agent
      - script: |
          TERRAFORM_VER=1.5.6
          wget https://releases.hashicorp.com/terraform/${TERRAFORM_VER}/terraform_${TERRAFORM_VER}_linux_amd64.zip
          unzip terraform_${TERRAFORM_VER}_linux_amd64.zip
          sudo mv terraform /usr/local/bin
        displayName: "Install Terraform CLI"

      # apply
      - script: |
          terraform apply -auto-approve \
            -var="location=$(location)" \
            -var="resource_group=$(resource_group)" \
            -var="vnet_name=$(vnet_name)" \
            -var="subnet_name=$(subnet_name)" \
            -var="vmss_name=$(vmss_name)" \
            -var="vm_size=$(vm_size)" \
            -var="image_sku=$(image_sku)" \
            -var="identity_type=$(identity_type)"
        displayName: "terraform apply"
 